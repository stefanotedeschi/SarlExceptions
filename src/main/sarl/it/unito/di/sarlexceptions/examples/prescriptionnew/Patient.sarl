
package it.unito.di.sarlexceptions.examples.prescriptionnew

import io.sarl.core.Initialize
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging
import it.unito.di.sarlexceptions.spaces.ExceptionSpace
import io.sarl.core.Schedules
import java.util.ArrayList

agent Patient {
	
	uses DefaultContextInteractions, Behaviors,Logging, Schedules

	var exSpace : ExceptionSpace
	
	var prescriptionReceived = false
	var responseFromDoctor = false

	on Initialize {
		
		exSpace = occurrence.parameters.get(0) as ExceptionSpace
		
		exSpace.registerAsRaiser(GetMedication, PrescriptionLost, asEventListener)
		exSpace.registerAsHandler(SpecialistVisitNeeded, asEventListener)

		emit(new GetMedication)
		
		info("[Patient] Initialized!")
		
	}
	
	on GetMedication {

		var symptoms = new ArrayList<String>
		symptoms.add("fever")
		symptoms.add("dyspnea")
		emit(new Complain(symptoms))
		
		info("[Patient] New complain sent to doctor!")

		in(5000) [
			if (!prescriptionReceived && !responseFromDoctor) {
				exSpace.raiseException(new PrescriptionLost(5000), ID)
			}
		]
		
	}
	
	on PrescriptionFilled {
		
		prescriptionReceived = true
		
		info("[Patient] *** THANK YOU ***")
		
	}
	
	on SpecialistVisitNeeded {
		
		responseFromDoctor = true
		
		info("[Patient] I need a specialist visit :(")
		
		
	}
	
}
