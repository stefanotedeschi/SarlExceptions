package it.unito.di.sarlexceptions.examples.prescription

import io.sarl.core.Initialize
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging
import it.unito.di.sarlexceptions.spaces.ExceptionSpace
import it.unito.di.sarlexceptions.events.ExceptionSpaceCreated

agent Doctor {
	
	uses DefaultContextInteractions, Behaviors,Logging

	var exSpacePatient : ExceptionSpace<LostMedicines>
	var exSpacePharmacist : ExceptionSpace<MissingPrescription>

	on Initialize {
		info("[Doctor] Initialized!")
	}

    on ExceptionSpaceCreated[occurrence.ex == LostMedicines] {
    	exSpacePatient = defaultContext.getSpace(occurrence.id)
    	exSpacePatient.registerAsHandler(asEventListener)
		info("[Doctor] Registered as handler for LostMedicines!")
    }

	on ExceptionSpaceCreated [occurrence.ex == MissingPrescription] {
		exSpacePharmacist = defaultContext.getSpace(occurrence.id)
		exSpacePharmacist.registerAsHandler(asEventListener)
		info("[Doctor] Registered as handler for MissingPrescription!")
	}

	on Consult {
		info("[Doctor] New prescription request received from patient! Sending prescription to pharmacist...")
		//emit(new Prescribe)
	}

	on LostMedicines {
		info("[Doctor] Handling exception LostMedicines!")
	}

	on MissingPrescription {
		info("[Doctor] Handling exception MissingPrescription!")
		emit(new PrescribeFwd)
	}
	
}
