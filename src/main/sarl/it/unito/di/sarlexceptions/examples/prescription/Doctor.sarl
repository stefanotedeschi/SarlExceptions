
package it.unito.di.sarlexceptions.examples.prescription

import io.sarl.core.Initialize
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging
import it.unito.di.sarlexceptions.spaces.ExceptionSpace
import java.util.List

agent Doctor {
	
	uses DefaultContextInteractions, Behaviors,Logging

	var exSpace : ExceptionSpace

	on Initialize {
		
		exSpace = occurrence.parameters.get(0) as ExceptionSpace
		exSpace.registerStrongParticipant(asEventListener)
		
		exSpace.registerAsHandler(PrescriptionLost, asEventListener)
		exSpace.registerAsRaiser(Complain,SpecialistVisitNeeded, asEventListener)

		info("[Doctor] Initialized!")
		
	}
	
	on Complain {
		
		info("[Doctor] New complain received from patient!")
		
		var symptoms = occurrence.symptoms
		
		if(areSevere(symptoms)) {
			info("[Doctor] Cannot send prescription. A specialist visit is needed")
			exSpace.raiseException(new SpecialistVisitNeeded("Severe symptoms"), ID)
		}
		else {
			emit(new Prescribe)
			info("[Doctor] Prescription sent!")	
		}
		
	}
	
	private def areSevere(symptoms : List<String>) : boolean {
		if(symptoms.contains("dyspnea")) return true
		else return false
	}
	
	
	on PrescriptionLost {
		info("[Doctor] Prescription lost!")
	}
	
}
